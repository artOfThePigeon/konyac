import { AxiosResponse } from "axios";
import { BackoffOptions } from 'exponential-backoff';
import { CampaignCloneQuery } from '../model/campaignCloneQuery';
import { CampaignCreateQuery } from '../model/campaignCreateQuery';
import { CampaignMessageAssignTemplateQuery } from '../model/campaignMessageAssignTemplateQuery';
import { CampaignMessagePartialUpdateQuery } from '../model/campaignMessagePartialUpdateQuery';
import { CampaignPartialUpdateQuery } from '../model/campaignPartialUpdateQuery';
import { CampaignRecipientEstimationJobCreateQuery } from '../model/campaignRecipientEstimationJobCreateQuery';
import { CampaignSendJobCreateQuery } from '../model/campaignSendJobCreateQuery';
import { CampaignSendJobPartialUpdateQuery } from '../model/campaignSendJobPartialUpdateQuery';
import { GetCampaignMessageCampaignRelationshipListResponse } from '../model/getCampaignMessageCampaignRelationshipListResponse';
import { GetCampaignMessageResponse } from '../model/getCampaignMessageResponse';
import { GetCampaignMessageResponseCollectionCompoundDocument } from '../model/getCampaignMessageResponseCollectionCompoundDocument';
import { GetCampaignMessageResponseCompoundDocument } from '../model/getCampaignMessageResponseCompoundDocument';
import { GetCampaignMessageTemplateRelationshipListResponse } from '../model/getCampaignMessageTemplateRelationshipListResponse';
import { GetCampaignMessagesRelationshipListResponseCollection } from '../model/getCampaignMessagesRelationshipListResponseCollection';
import { GetCampaignRecipientEstimationJobResponse } from '../model/getCampaignRecipientEstimationJobResponse';
import { GetCampaignRecipientEstimationResponse } from '../model/getCampaignRecipientEstimationResponse';
import { GetCampaignResponseCollectionCompoundDocument } from '../model/getCampaignResponseCollectionCompoundDocument';
import { GetCampaignResponseCompoundDocument } from '../model/getCampaignResponseCompoundDocument';
import { GetCampaignSendJobResponse } from '../model/getCampaignSendJobResponse';
import { GetCampaignTagRelationshipListResponseCollection } from '../model/getCampaignTagRelationshipListResponseCollection';
import { GetTagResponseCollection } from '../model/getTagResponseCollection';
import { GetTemplateResponse } from '../model/getTemplateResponse';
import { PatchCampaignMessageResponse } from '../model/patchCampaignMessageResponse';
import { PatchCampaignResponse } from '../model/patchCampaignResponse';
import { PostCampaignMessageResponse } from '../model/postCampaignMessageResponse';
import { PostCampaignRecipientEstimationJobResponse } from '../model/postCampaignRecipientEstimationJobResponse';
import { PostCampaignResponse } from '../model/postCampaignResponse';
import { PostCampaignSendJobResponse } from '../model/postCampaignSendJobResponse';
import { Session } from './apis';
export declare class CampaignsApi {
    protected backoffOptions: BackoffOptions;
    session: Session;
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    constructor(session: Session);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    createCampaign(campaignCreateQuery: CampaignCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCampaignResponse;
    }>;
    createCampaignClone(campaignCloneQuery: CampaignCloneQuery): Promise<{
        response: AxiosResponse;
        body: PostCampaignResponse;
    }>;
    createCampaignMessageAssignTemplate(campaignMessageAssignTemplateQuery: CampaignMessageAssignTemplateQuery): Promise<{
        response: AxiosResponse;
        body: PostCampaignMessageResponse;
    }>;
    createCampaignRecipientEstimationJob(campaignRecipientEstimationJobCreateQuery: CampaignRecipientEstimationJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCampaignRecipientEstimationJobResponse;
    }>;
    createCampaignSendJob(campaignSendJobCreateQuery: CampaignSendJobCreateQuery): Promise<{
        response: AxiosResponse;
        body: PostCampaignSendJobResponse;
    }>;
    deleteCampaign(id: string): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
    getCampaign(id: string, options?: {
        fieldsCampaignMessage?: Array<'label' | 'channel' | 'content' | 'send_times' | 'render_options' | 'render_options.shorten_links' | 'render_options.add_org_prefix' | 'render_options.add_info_link' | 'render_options.add_opt_out_language' | 'created_at' | 'updated_at'>;
        fieldsCampaign?: Array<'name' | 'status' | 'archived' | 'audiences' | 'audiences.included' | 'audiences.excluded' | 'send_options' | 'tracking_options' | 'send_strategy' | 'send_strategy.method' | 'send_strategy.options_static' | 'send_strategy.options_static.datetime' | 'send_strategy.options_static.is_local' | 'send_strategy.options_static.send_past_recipients_immediately' | 'send_strategy.options_throttled' | 'send_strategy.options_throttled.datetime' | 'send_strategy.options_throttled.throttle_percentage' | 'send_strategy.options_sto' | 'send_strategy.options_sto.date' | 'created_at' | 'scheduled_at' | 'updated_at' | 'send_time'>;
        fieldsTag?: Array<'name'>;
        include?: Array<'campaign-messages' | 'tags'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignResponseCompoundDocument;
    }>;
    getCampaignCampaignMessages(id: string, options?: {
        fieldsCampaignMessage?: Array<'label' | 'channel' | 'content' | 'send_times' | 'render_options' | 'render_options.shorten_links' | 'render_options.add_org_prefix' | 'render_options.add_info_link' | 'render_options.add_opt_out_language' | 'created_at' | 'updated_at'>;
        fieldsCampaign?: Array<'name' | 'status' | 'archived' | 'audiences' | 'audiences.included' | 'audiences.excluded' | 'send_options' | 'tracking_options' | 'send_strategy' | 'send_strategy.method' | 'send_strategy.options_static' | 'send_strategy.options_static.datetime' | 'send_strategy.options_static.is_local' | 'send_strategy.options_static.send_past_recipients_immediately' | 'send_strategy.options_throttled' | 'send_strategy.options_throttled.datetime' | 'send_strategy.options_throttled.throttle_percentage' | 'send_strategy.options_sto' | 'send_strategy.options_sto.date' | 'created_at' | 'scheduled_at' | 'updated_at' | 'send_time'>;
        fieldsTemplate?: Array<'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>;
        include?: Array<'campaign' | 'template'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignMessageResponseCollectionCompoundDocument;
    }>;
    getCampaignMessage(id: string, options?: {
        fieldsCampaignMessage?: Array<'label' | 'channel' | 'content' | 'send_times' | 'render_options' | 'render_options.shorten_links' | 'render_options.add_org_prefix' | 'render_options.add_info_link' | 'render_options.add_opt_out_language' | 'created_at' | 'updated_at'>;
        fieldsCampaign?: Array<'name' | 'status' | 'archived' | 'audiences' | 'audiences.included' | 'audiences.excluded' | 'send_options' | 'tracking_options' | 'send_strategy' | 'send_strategy.method' | 'send_strategy.options_static' | 'send_strategy.options_static.datetime' | 'send_strategy.options_static.is_local' | 'send_strategy.options_static.send_past_recipients_immediately' | 'send_strategy.options_throttled' | 'send_strategy.options_throttled.datetime' | 'send_strategy.options_throttled.throttle_percentage' | 'send_strategy.options_sto' | 'send_strategy.options_sto.date' | 'created_at' | 'scheduled_at' | 'updated_at' | 'send_time'>;
        fieldsTemplate?: Array<'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>;
        include?: Array<'campaign' | 'template'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignMessageResponseCompoundDocument;
    }>;
    getCampaignMessageCampaign(id: string, options?: {
        fieldsCampaignMessage?: Array<'label' | 'channel' | 'content' | 'send_times' | 'render_options' | 'render_options.shorten_links' | 'render_options.add_org_prefix' | 'render_options.add_info_link' | 'render_options.add_opt_out_language' | 'created_at' | 'updated_at'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignMessageResponse;
    }>;
    getCampaignMessageRelationshipsCampaign(id: string): Promise<{
        response: AxiosResponse;
        body: GetCampaignMessageCampaignRelationshipListResponse;
    }>;
    getCampaignMessageRelationshipsTemplate(id: string): Promise<{
        response: AxiosResponse;
        body: GetCampaignMessageTemplateRelationshipListResponse;
    }>;
    getCampaignMessageTemplate(id: string, options?: {
        fieldsTemplate?: Array<'name' | 'editor_type' | 'html' | 'text' | 'created' | 'updated'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetTemplateResponse;
    }>;
    getCampaignRecipientEstimation(id: string, options?: {
        fieldsCampaignRecipientEstimation?: Array<'estimated_recipient_count'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignRecipientEstimationResponse;
    }>;
    getCampaignRecipientEstimationJob(id: string, options?: {
        fieldsCampaignRecipientEstimationJob?: Array<'status'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignRecipientEstimationJobResponse;
    }>;
    getCampaignRelationshipsCampaignMessages(id: string): Promise<{
        response: AxiosResponse;
        body: GetCampaignMessagesRelationshipListResponseCollection;
    }>;
    getCampaignRelationshipsTags(id: string): Promise<{
        response: AxiosResponse;
        body: GetCampaignTagRelationshipListResponseCollection;
    }>;
    getCampaignSendJob(id: string, options?: {
        fieldsCampaignSendJob?: Array<'status'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignSendJobResponse;
    }>;
    getCampaignTags(id: string, options?: {
        fieldsTag?: Array<'name'>;
    }): Promise<{
        response: AxiosResponse;
        body: GetTagResponseCollection;
    }>;
    getCampaigns(filter: string, options?: {
        fieldsCampaignMessage?: Array<'label' | 'channel' | 'content' | 'send_times' | 'render_options' | 'render_options.shorten_links' | 'render_options.add_org_prefix' | 'render_options.add_info_link' | 'render_options.add_opt_out_language' | 'created_at' | 'updated_at'>;
        fieldsCampaign?: Array<'name' | 'status' | 'archived' | 'audiences' | 'audiences.included' | 'audiences.excluded' | 'send_options' | 'tracking_options' | 'send_strategy' | 'send_strategy.method' | 'send_strategy.options_static' | 'send_strategy.options_static.datetime' | 'send_strategy.options_static.is_local' | 'send_strategy.options_static.send_past_recipients_immediately' | 'send_strategy.options_throttled' | 'send_strategy.options_throttled.datetime' | 'send_strategy.options_throttled.throttle_percentage' | 'send_strategy.options_sto' | 'send_strategy.options_sto.date' | 'created_at' | 'scheduled_at' | 'updated_at' | 'send_time'>;
        fieldsTag?: Array<'name'>;
        include?: Array<'campaign-messages' | 'tags'>;
        pageCursor?: string;
        sort?: 'created_at' | '-created_at' | 'id' | '-id' | 'name' | '-name' | 'scheduled_at' | '-scheduled_at' | 'updated_at' | '-updated_at';
    }): Promise<{
        response: AxiosResponse;
        body: GetCampaignResponseCollectionCompoundDocument;
    }>;
    updateCampaign(id: string, campaignPartialUpdateQuery: CampaignPartialUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchCampaignResponse;
    }>;
    updateCampaignMessage(id: string, campaignMessagePartialUpdateQuery: CampaignMessagePartialUpdateQuery): Promise<{
        response: AxiosResponse;
        body: PatchCampaignMessageResponse;
    }>;
    updateCampaignSendJob(id: string, campaignSendJobPartialUpdateQuery: CampaignSendJobPartialUpdateQuery): Promise<{
        response: AxiosResponse;
        body?: any;
    }>;
}
