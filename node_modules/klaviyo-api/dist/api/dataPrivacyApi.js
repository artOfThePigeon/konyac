"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataPrivacyApi = void 0;
const axios = require('axios');
const exponential_backoff_1 = require("exponential-backoff");
const models_1 = require("../model/models");
const apis_1 = require("./apis");
let defaultBasePath = 'https://a.klaviyo.com';
class DataPrivacyApi {
    constructor(session) {
        this.backoffOptions = new apis_1.RetryOptions().options;
        this._basePath = defaultBasePath;
        this._defaultHeaders = {
            revision: "2023-09-15",
            "User-Agent": "klaviyo-api-node/6.0.1"
        };
        this._useQuerystring = false;
        this.session = session;
    }
    set useQuerystring(value) {
        this._useQuerystring = value;
    }
    set basePath(basePath) {
        this._basePath = basePath;
    }
    set defaultHeaders(defaultHeaders) {
        this._defaultHeaders = defaultHeaders;
    }
    get defaultHeaders() {
        return this._defaultHeaders;
    }
    get basePath() {
        return this._basePath;
    }
    requestProfileDeletion(dataPrivacyCreateDeletionJobQuery) {
        return __awaiter(this, void 0, void 0, function* () {
            const localVarPath = this.basePath + '/api/data-privacy-deletion-jobs/';
            let localVarQueryParameters = {};
            let localVarHeaderParams = Object.assign({}, this._defaultHeaders);
            const produces = ['application/json'];
            if (produces.indexOf('application/json') >= 0) {
                localVarHeaderParams.Accept = 'application/json';
            }
            else {
                localVarHeaderParams.Accept = produces.join(',');
            }
            if (dataPrivacyCreateDeletionJobQuery === null || dataPrivacyCreateDeletionJobQuery === undefined) {
                throw new Error('Required parameter dataPrivacyCreateDeletionJobQuery was null or undefined when calling requestProfileDeletion.');
            }
            (0, apis_1.queryParamPreProcessor)(localVarQueryParameters);
            let config = {
                method: 'POST',
                url: localVarPath,
                headers: localVarHeaderParams,
                params: localVarQueryParameters,
                data: models_1.ObjectSerializer.serialize(dataPrivacyCreateDeletionJobQuery, "DataPrivacyCreateDeletionJobQuery")
            };
            this.session.applyToRequest(config);
            return (0, exponential_backoff_1.backOff)(() => {
                return new Promise((resolve, reject) => {
                    axios(config)
                        .then(axiosResponse => {
                        let body;
                        resolve({ response: axiosResponse, body: body });
                    })
                        .catch(error => {
                        reject(error);
                    });
                });
            }, this.session.getRetryOptions());
        });
    }
}
exports.DataPrivacyApi = DataPrivacyApi;
//# sourceMappingURL=dataPrivacyApi.js.map